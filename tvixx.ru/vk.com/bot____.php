<?php

include "config.php";
include "../system/connect.php";

$config = new Config_vk;
$confirmationToken = 'f459d8e3';
$data = json_decode(file_get_contents("php://input"));
if (strcmp($data->secret, $config->privat) !== 0) {
    exit(0);
}

function send($text, $peer_id) {
    global $config;

    $reg_mes = [
        'message' => $text,
        'access_token' => $config->key,
        'v' => '5.80',
        'random_id' => rand(1111, 9999) . rand(1111, 9999) . rand(1111, 9999) . rand(1111, 9999) . rand(1111, 9999),
        'peer_id' => $peer_id
    ];
    $get = http_build_query($reg_mes);
    file_get_contents("https://api.vk.com/method/messages.send?" . $get);
}

switch ($data->type) {
    case 'message_new':
        $userID = $data->object->from_id;
        $userInfo = json_decode(file_get_contents("https://api.vk.com/method/users.get?user_ids=" . $userID . "&v=5.50&access_token=" . $config->key));
        $userName = $userInfo->response[0]->first_name;
        $peer_id = $data->object->peer_id ?: $data->object->from_id;
        $u = $mc->query("SELECT * FROM `users` LIMIT 70")->fetch_all(MYSQLI_ASSOC);
        $alt = ["–∫–ª–∞—Å—Å–Ω–æ", "—Ç—ã –º–æ–ª–æ–¥–µ—Ü", "—Å–ø–∞—Å–∏–±–æ", "—É–¥–∞—á–∏", "–¥–∞–≤–∞–π", "—è –ø—Ä–æ—Ç–∏–≤", "—Å–∫–æ–ª—å–∫–æ", "–∑–∞—á–µ–º", "—Ö–≤–∞—Ç–∏—Ç", "—Ç–∏—à–µ –±—É–¥—å", "—Å–∞–º —Ç–∞–∫–æ–π", "–∏–Ω–æ–≥–¥–∞", "–≤–æ–∑–º–æ–∂–µ–Ω–æ", "–º–æ–∂–µ—Ç", "–Ω–µ—Ç", "–¥–∞", "–∞–≥–∞", "—Å–æ–≥–ª–∞—Å–µ–Ω", "—Ö–æ—Ä–æ—à–æ", "–æ—Ç–ª–∏—á–Ω–æ", "–ø–æ–Ω—è—Ç–Ω–æ", "–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", "—è —Ç–æ–∂–µ", "–ø–æ–¥—É–º–∞–µ—à—å", "–¥–µ–ª–æ–≤ —Ç–æ", "–Ω—É –±—ã–≤–∞–µ—Ç", "–Ω—É –∏ —á—Ç–æ", "–∫–æ–≥–¥–∞ —ç—Ç–æ –±—ã–ª–æ", "–ø–æ—á–µ–º—É", "–≥–¥–µ", "—á—Ç–æ", "–∫—Ç–æ", "–æ–∫", "–ª–∞–¥–Ω–æ", "–∏ —á—ë", "–Ω—É",];
        $arr = [
            "–ø—Ä–∏–≤–µ—Ç" => [
                "–ü—Ä–∏–≤–µ—Ç", "–ó–¥–æ—Ä–æ–≤–∞", "–ö—É", "–•–∞–π", "–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞—Å—Ç–µ", "—Ö–µ–ª–ª—ë—É", "–¥—Ä–∞—Ç—É—Ç–µ"
            ],
            "–∫–∞–∫" => [
                "–Ω–æ—Ä–º", "–∑–±—Å", "–æ—Ç–ª–∏—á–Ω–æ", "–∫—Ä—É—Ç–æ", "—Ö–æ—Ä–æ—à–æ", "–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ", "–≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ", "—ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —à–µ–¥–µ–≤—Ä –±—Ä–∞—Ç–∞–Ω"
            ],
            "–¥–µ–ª–∞" => [
                "–Ω–æ—Ä–º", "–∑–±—Å", "–æ—Ç–ª–∏—á–Ω–æ", "–∫—Ä—É—Ç–æ", "—Ö–æ—Ä–æ—à–æ", "–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ", "–≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ", "—ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —à–µ–¥–µ–≤—Ä –±—Ä–∞—Ç–∞–Ω"
            ],
            "–±–æ—Ç" => [
                "–∫–ª–∞—Å—Å–Ω–æ", "—Ç—ã –º–æ–ª–æ–¥–µ—Ü", "—Å–ø–∞—Å–∏–±–æ", "—É–¥–∞—á–∏", "–¥–∞–≤–∞–π", "—è –ø—Ä–æ—Ç–∏–≤", "—Å–∫–æ–ª—å–∫–æ", "–∑–∞—á–µ–º", "—Ö–≤–∞—Ç–∏—Ç", "—Ç–∏—à–µ –±—É–¥—å", "—Å–∞–º —Ç–∞–∫–æ–π", "–∏–Ω–æ–≥–¥–∞", "–≤–æ–∑–º–æ–∂–µ–Ω–æ", "–º–æ–∂–µ—Ç", "–Ω–µ—Ç", "–¥–∞", "–∞–≥–∞", "—Å–æ–≥–ª–∞—Å–µ–Ω", "—Ö–æ—Ä–æ—à–æ", "–æ—Ç–ª–∏—á–Ω–æ", "–ø–æ–Ω—è—Ç–Ω–æ", "–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", "—è —Ç–æ–∂–µ", "–ø–æ–¥—É–º–∞–µ—à—å", "–¥–µ–ª–æ–≤ —Ç–æ", "–Ω—É –±—ã–≤–∞–µ—Ç", "–Ω—É –∏ —á—Ç–æ", "–∫–æ–≥–¥–∞ —ç—Ç–æ –±—ã–ª–æ", "–ø–æ—á–µ–º—É", "–≥–¥–µ", "—á—Ç–æ", "–∫—Ç–æ", "–æ–∫", "–ª–∞–¥–Ω–æ", "–∏ —á—ë", "–Ω—É", "–∫—Ç–æ –±–æ—Ç —Ç–æ", "–±–æ—Ç –Ω–µ –±–æ—Ç"
            ],
            "?" => [
                "—Ö–º –Ω–∞–¥–æ –ø–æ–¥—É–º–∞—Ç—å", "–∞ –≤ –≥—É–≥–ª–µ –ø—Ä–æ–±–æ–≤–∞–ª —Å–º–æ—Ç—Ä–µ—Ç—å", "–Ω–∞–¥–æ –∑–∞–≥—É–≥–ª–∏—Ç—å", "—Å—Ç—Ä–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å"
            ]
        ];
        $xz = "";
        $text = $data->object->text;
        foreach ($arr as $key => $item) {
            if (preg_match("/" . preg_quote($key, '/') . "/iu", $text)) {
                $xz .= "  " . $arr[$key][array_rand($item)] . " . ";
            }
        }

        if ($xz == "") {
            $xz = " " . $alt[array_rand($alt)] . " .";
        }
        $d = "";
         /*if(json_decode(file_get_contents('user.json'),TRUE) == null{
         	send("gooooogle",$peer_id);
    }*/
   $file = json_decode(file_get_contents('user.json'),TRUE);
   //—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–≤—Ç–æ
   for($i = 0; $i < count($file); $i++){
   	if((int) $file[$i]->id == $userID){
   	send("55555",$peer_id);
   	}else{
   	$id = count($file) + 1;
   	$file[$id] = array(
    'id' => $userID,
    'name' => $userName,
    'bablo' => 1500);
    file_put_contents('user.json',json_encode($file[$id]));
    send("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {$userName}",$peer_id);
   }
  }
   $t = "";
   	if($text == "user"){
   	for($i = 0; $i < count($file); $i++){
   	if($file[$i]->id == $userID){
   	$t = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n –ò–º—è: {$file[$i]->name} \n üíµ–î–µ–Ω—å–≥–∏: {$file[$i]->bablo} \n –ê–π–¥–∏: {$file[$i]->id}";
   	}
   }
   	send("{$t}",$peer_id);
   }
   
        if ($text == "result") {
            for ($i = 0; $i < count($u); $i++) {
                $ad;
                if ($u[$i]['access'] == 0) {
                    $ad = "–ò";
                } else if ($u[$i]['access'] == 1) {
                    $ad = "M";
                } else if ($u[$i]['access'] == 2) {
                    $ad = "Ad";
                } else if ($u[$i]['access'] > 3) {
                    $ad = "üëë";
                }
                $d .= "{$ad}-{$u[$i]['name']} [{$u[$i]['level']}]\n";
            }
            send($d . "\n –ò-–∏–≥—Ä–æ–∫ \n M-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä \n Ad-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä \n üëë-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", $peer_id);
        } elseif ($text == "getDate" && $text != $xz) {
            send("–°–µ—Ä–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è: " . date("h:i:s"), $peer_id);
        } elseif ($text == "info" && $text != $xz) {
            send("mobitva2 online (android,web)", $peer_id);
        } elseif ($text == "getAdmin" && $text != $xz) {
            send("üëë" . $u[2]['name'] . " [{$u[2]['level']}]\n üëë" . $u[1]['name'] . " [{$u[1]['level']}]", $peer_id);
        } elseif (preg_match('/rand(.*?)\((.*?),(.*?)\)/iu', $text, $arr)) {
            $u1 = rand($arr[2], $arr[3]);
            $b1 = rand($arr[2], $arr[3]);
            $t1 = " –ù–∏—á—å—è !";
            if ($u1 > $b1) {
                $t1 = " –í—ã –ü–æ–±–µ–¥–∏–ª–∏ ! ";
            }
            if ($u1 < $b1) {
                $t1 = " –í—ã –ü—Ä–æ–∏–≥—Ä–∞–ª–∏ ! ";
            }
            send($userName . "," . $t1 . " –°—á—ë—Ç " . $u1 . " : " . $b1 . " .", $peer_id);
        } elseif (preg_match("/" . preg_quote("–±–æ—Ç", "/") . "/iu", $text)) {
            send($userName . "," . $xz, $peer_id);
        }
        header("HTTP/1.1 200 OK");
        echo 'ok';
        break;
    case 'confirmation':
        echo $confirmationToken;
        break;
    default :
        header("HTTP/1.1 200 OK");
        echo 'ok';
}
?>